version: "3.7"

x-logging:
  &loki-logging
  driver: loki
  options:
    loki-url: http://127.0.0.1:3100/loki/api/v1/push
    loki-external-labels: "job=grafana,owner=artur,environment=development"
    loki-retries: "5"
    loki-batch-size: "400"

services:
  grafana:
    image: docker.io/bitnami/grafana:latest
    hostname: graph
    restart: always
    environment:
      - 'GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}'
      - 'GF_INSTALL_PLUGINS=camptocamp-prometheus-alertmanager-datasource'
    #ports:
    #  - "3000:3000"
    networks:
      - traefik-network
      - graph_network
    logging:
      driver: "loki"
      options:
        loki-url: http://127.0.0.1:3100/loki/api/v1/push
        loki-external-labels: "job=grafana,owner=artur,environment=development"
        loki-retries: "5"
        loki-batch-size: "400"
    volumes:
      - grafana_data:/opt/bitnami/grafana/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${GRAFANA_PROJECT}.rule=Host(`${GRAFANA_FQDN}`)"
      - "traefik.http.routers.${GRAFANA_PROJECT}.entrypoints=websecure"
      - "traefik.http.routers.${GRAFANA_PROJECT}.tls=true"
      - "traefik.http.routers.${GRAFANA_PROJECT}.tls.certresolver=${TLSRESOLVER}"
      - "traefik.docker.network=${TRAEFIK_NETWORK_NAME}"
      - "traefik.port=3000"

  prometheus:
    image: docker.io/bitnami/prometheus:2
    hostname: prometheus
    restart: always
    volumes:
      - prometheus_data:/opt/bitnami/prometheus/data
      - prometheus_config:/opt/bitnami/prometheus/conf
    #ports:
    #  - '9091:9090'
    networks:
      - traefik-network
      - graph_network
    logging: *loki-logging
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${PROMETHEUS_PROJECT}.rule=Host(`${PROMETHEUS_FQDN}`)"
      - "traefik.http.routers.${PROMETHEUS_PROJECT}.entrypoints=websecure"
      - "traefik.http.routers.${PROMETHEUS_PROJECT}.tls=true"
      - "traefik.http.routers.${PROMETHEUS_PROJECT}.tls.certresolver=${TLSRESOLVER}"
      - "traefik.docker.network=${TRAEFIK_NETWORK_NAME}"
      - "traefik.port=9090"
      - "traefik.http.routers.prometheus.middlewares=traefik-auth"

  alertmanager:
    image: docker.io/bitnami/alertmanager:0
    hostname: alertmanager
    restart: always
    #ports:
    #  - '9093:9093'
    networks:
      - traefik-network
      - graph_network
    logging: *loki-logging
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${ALERT_PROJECT}.rule=Host(`${ALERT_FQDN}`)"
      - "traefik.http.routers.${ALERT_PROJECT}.entrypoints=websecure"
      - "traefik.http.routers.${ALERT_PROJECT}.tls=true"
      - "traefik.http.routers.${ALERT_PROJECT}.tls.certresolver=${TLSRESOLVER}"
      - "traefik.docker.network=${TRAEFIK_NETWORK_NAME}"
      - "traefik.port=9093"
      - "traefik.http.routers.alert.middlewares=traefik-auth"
    volumes:
      - alertmanager_config:/opt/bitnami/alertmanager/conf
      - alertmanager_data:/opt/bitnami/alertmanager/data

  blackbox-exporter:
    image: docker.io/bitnami/blackbox-exporter:0
    hostname: blackbox
    restart: always
    logging: *loki-logging
    networks:
      - graph_network
    volumes:
      - blackbox_config:/opt/bitnami/blackbox-exporter

  cadvisor:
    image: google/cadvisor
    hostname: cadvisor
    restart: always
    networks:
      - graph_network
    logging: *loki-logging
    #ports:
    #  - 8888:8080
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs
      - /var/run:/var/run
      - /sys:/sys
      - /var/lib/docker:/var/lib/docker

  container-exporter:
    image: prom/container-exporter
    restart: always
    #ports:
    #  - "9104:9104"
    command:
      - --addr=/var/run/docker.sock:/var/run/docker.sock

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - 127.0.0.1:3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki/config.yaml:/etc/loki/config.yaml
      - loki:/data/loki
    networks:
      - graph_network
#    networks:
#      loki_network:
#        ipv4_address: 10.5.0.2

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers
      - ./promtail:/etc/promtail-config/
    command: -config.file=/etc/promtail-config/promtail.yml
    networks:
      - graph_network


volumes:
  alertmanager_config:
  alertmanager_data:
  blackbox_config:
  grafana_data:
  prometheus_data:
  prometheus_config:
  loki:

networks:
  traefik-network:
    name: ${TRAEFIK_NETWORK_NAME}
    external: true
    driver: bridge
  graph_network:
    name: ${INTERNAL_NETWORK_NAME}
    driver: bridge
#  loki_network:
#    driver: bridge
#    ipam:
#      config:
#        - subnet: 10.5.0.0/16
#          gateway: 10.5.0.1